//Scan through all images in the folder organized by '01 ORGANIZE IMAGES BY WELL' - referencing the text data in 'neuronPos'
//generated by '02 USER SELECT NEURONS TO TRACK'
//For each image pixel intensity is measured at the points specificed in 'neuronPos' - this is saved as a text file in a folder
//'neuronTraces'

// Define tracking variables
height = 16;             
//h: height of search window for tracking
width = 16;              
//w: width of search window for tracking
// Get multiwell organized folder for tracking
sourceDir = getDirectory("Choose a Directory ");
folderList = getFileList(sourceDir);
Array.sort(folderList);
//Find Neuron Position Folder created by NeuronSelect
posDir = sourceDir + "\\.." + "/neuronPos/";
//Create New Folder for Saving Trace Files
newDir = sourceDir + "\\.." + "/neuronTraces/";
File.makeDirectory(newDir);
saveDir = newDir;
//Prompt User - which well to start with?
startFile = getNumber("found "+folderList.length+" wells, start tracking at?", 1);
//Prompt User - which well to end with?
endFile = getNumber("found "+folderList.length+" wells, end tracking at?", folderList.length);
//Find Number of cycles in the 1st well folder
path = sourceDir+folderList[1];
imageList = getFileList(path);
Array.sort(imageList);
//Prompt User - which cycle to start with?
startMov = getNumber("found "+imageList.length+" movies, start tracking at?", 1);
//Prompt User - which cycle to end with?
endMov = getNumber("found "+imageList.length+" movies, end tracking at?", imageList.length);
//??
setBatchMode(true);
//Neuron Tracing Loop - defined by which wells the user wanted
for (t=startFile-1; t<=endFile-1; t++) {
	//open well folder of images
  	path = sourceDir+folderList[t];
  	imageList = getFileList(path);
	Array.sort(imageList);
	//Open Text file of Neuron Positions
	posFile = posDir+"neuronPos"+(t+1)+".txt";
  	posFileOpen = File.openAsString(posFile);
	//create array based on number of animals
  	rows = split(posFileOpen, "\n");
  	x = newArray(rows.length);
	y = newArray(rows.length);
	//populate X and Y arrays with X and Y coordinates from NeuronPos text
  	for(r=0; r<rows.length; r++){
    		columns=split(rows[r]," ");
    		x[r] = parseInt(columns[3]);
    		y[r] = parseInt(columns[5]);
  	}
	



//look through user defined cycles in this specific well
  	for (h=startMov-1; h<=endMov-1; h++) {
		//loop through each XY position for the movie and measure pixel intensity in each slice
    		for (j=0; j<x.length; j++) {
      			print("well,cycle,animal,frame,x,y,sqarea,sqintdens,bgmedian,sqintsub");
      			open(path+imageList[h]);
      			xc=x[j];
      			yc=y[j];
      			run("Set Measurements...", "area integrated mean median redirect=None decimal=3");
		     	setOption("Stack position", true);
			//Tracing Loop – each slice has tagged pixel values displayed in the Log
      			for (n=1; n<=nSlices; n++) {
        				setSlice(n);
        				// for neuron area
        				makeRectangle(xc - width/2, yc - height/2, width, height);
        				run("Add Selection...", "stroke=yellow width=1 fill=0");
        				run("Measure");
        				sqarea = getResult("Area");
        				sqintdens = getResult("IntDen");
        				// for outer background
        				makeOval(xc - (width*2.4)/2, yc - (height*2.4)/2, 2.4*width, 2.4*height);
        				run("Add Selection...", "stroke=yellow width=1 fill=0");
        				setKeyDown("alt");
        				// for inner background
        				makeOval(xc - (width*1.5)/2, yc - (height*1.5)/2, 1.5*width, 1.5*height);
        				run("Add Selection...", "stroke=yellow width=1 fill=0");
        				run("Measure");
        				bgmedian = getResult("Median");
        				sqintsub = sqintdens - (sqarea * bgmedian);
				//Display Individual values as a row in the Log
print((t+1) +","+ (h+1) +","+ (j+1) +","+ n +","+ xc +","+ yc +","+ sqarea +","+ sqintdens +","+ bgmedian +","+ sqintsub);
      			}
			//get file name and create shortened string
      			name = getTitle();
      			dotIndex = indexOf(name,".tif");
      			title = substring(name,0,dotIndex);
			//Save Log to Text File – 1 row of data for each slice in the video
      			selectWindow("Log");
      			saveAs("Text", saveDir + title + "an" + (j+1));
      			run("Clear Results");
      			print("\\Clear");
      			run("Close All");
		//end of animal loop - go to next animal
    		}
	//End of Cycle Loop - go to next cycle in the range given by the user
  	}
//end of well loop - go to next well	
}
