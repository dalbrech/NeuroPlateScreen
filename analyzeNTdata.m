%% Analysis of well plate data (384 well screen and liquid robot)
% Ross Lagoy
% WPI 09.20.17
% Albrecht Lab
%Reads text data in folder 'neuronTraces' generated by 
%ImageJ macro '03 MEASURE NEURON GCaMP VALUES' presents pixel 
%values 'sqintsub' visually

%% Loading Data & Naming Variables

% load data directory
path = uigetdir;
listing = dir(path);
listing = listing(~ismember({listing.name},{'.','..','.DS_Store','Thumbs.db'})); % remove junk from dir

% import experiment settings
filename = fullfile(path,listing(1).name);
fid = fopen(filename);
C = textscan(fid,'%s','delimiter', ',');
settings = str2double([C{:}]);

% produced variables
duration = settings(8);
interval = settings(9);
pulseStart = settings(11);
if isnan(settings(12))
    pulseEnd = settings(13);
else
    pulseEnd = settings(12);
end

% import animal data
f = 1;
D = dir(fullfile(path,'*an*.txt'));
cd(path);
h = waitbar(0,'Loading Neural Trace Files...');
for i = 1:size(D,1);
    name = fullfile(path,D(i).name);
    SmDat(f).name = name;
    SmDat(f).data = textread(SmDat(f).name,'','delimiter',',','headerlines',1);
    SmDat(f).animal = str2num(name((strfind(name,'an')+2):(strfind(name,'an')+3)));
    SmDat(f).well = str2num(name((strfind(name,'well')+4):(strfind(name,'well')+6)));
    SmDat(f).cycle = str2num(name((strfind(name,'cycle')+5):(strfind(name,'cycle')+7)));
    SmDat(f).mov = str2num(name((strfind(name,'mov')+3):(strfind(name,'mov')+5)));
    f = f+1;
    waitbar(i / size(D,1))
end
close(h) 

% produced variables
raw = struct2mat(3,SmDat,[],{'data'});
well = struct2mat(1,SmDat,[],{'well'});
cycle = struct2mat(1,SmDat,[],{'cycle'});
mov = struct2mat(1,SmDat,[],{'mov'});
animal = struct2mat(1,SmDat,[],{'animal'});
animalNumber = length(unique(animal));
pulseNumber = max(mov);
numfiles = size(raw,3);
numpts = mmax(raw(:,4,:));
All = NaN*ones(numpts,size(raw,2),numfiles);

%Request Sorting Factor
prompt = 'Sort by well, cycle, mov, animal? ';
pic = input(prompt);

%?
for i = 1:numpts
    All(i,:,:) = raw(i,:,:);
end
%%
%Get Pixel values from 10th column of read text data
AllSqInt = squeeze(All(:,10,:));
% baseline = nanmean(AllSqInt(1,:));

%Make Baseline from first 25 frames of pixel values
baseline = nanmean(AllSqInt(1:25,:));
%Make normalization vector
normMat = repmat(baseline,size(AllSqInt,1),1);
AllSqIntNorm = AllSqInt ./ normMat;
AllSqIntNorm(isnan(AllSqIntNorm))=0;
% AllSqIntNorm(AllSqIntNorm<0.5)=nan;
% AllSqIntNorm(AllSqIntNorm>10)=nan;
AllSqIntSub = AllSqInt - normMat;

peaks = mmax(AllSqIntNorm(pulseStart:pulseEnd,:),1);

%% Databrowse Figure

databrowse(AllSqInt',(1:duration)/10,pic);
% hold on
% hilite([pulseStart/10,pulseEnd/10],[],[220 220 220]/255,[],false)

%%
% peakmatrix = flipud(reshape(peaks,[length(unique(animal)),length(unique(well))])');
% HeatMap(peakmatrix,'colormap',colormap/255,'Symmetric',false)

%% Figure 1: trace of animals across time

% A: by well (or substitute with mov (pulses), cycle, genotype)
figure(1);

for w = 0:max(pic);
    lineartrace = reshape(AllSqIntNorm(:,find(pic == w)),[],1);
    hold on; 
    plot(lineartrace + (max(pic)-1-w)*4);
end; hold off
ylabel('animals responses per well or cycle')
xlabel('time')
% alternatively change animal to pic

%% Figure 2: heatmap of sorted animal peaks

% A: by well (or substitute with mov (pulses), cycle, genotype)
figure(2); clf;

for w = min(pic):max(pic);
    index = find(pic == w);
    [a,b]=sort(peaks(index),'descend');
    subplot(1,max(pic)-min(pic)+1,w-(min(pic)-1)); 
    imagesc(AllSqIntNorm(:,index(b))'); 
    set(gca,'CLim',[min(peaks),max(peaks)]);
    title(w);
end

%% Figure 3: box-scatter of animals peaks

% A: peaks grouped by well (or substitute with different combinations- ie. peaks,animal)
figure(3);

boxplot(peaks,pic,'color',[100 100 100]/255)
hold on
% scatter(pic,peaks)
% hold on
ylabel('individual dF Peaks')
xlabel('well or cycle')
xlim([0,max(pic)+1])

%% Figure 4: box-scatter of animal peak time

for i = 1:numfiles    
    for j = 1:duration
        if peaks(i) == AllSqIntNorm(j,i);
            peaktime(i,1) = j;
        else
            j = j+1;
        end
    end
end
peaktime = peaktime';
peaktime = peaktime-pulseStart;

% A: peak time grouped by well (or substitute with different combinations- ie. peaks,animal)
figure(4);

boxplot(peaktime,pic,'color',[100 100 100]/255)
hold on
% scatter(pic,peaktime)
% hold on
ylabel('individual dF Peak Time')
xlabel('well or cycle')
xlim([0,max(pic)+1])

%% Figure 5: Heatmaps

% figure(5);

% imagesc(reshape(peaks,[length(unique(animal)),length(unique(well))])')
% imagesc(reshape(peaks,[],length(unique(well)))')

%% Statistics

% Can substitute with different combinations like box plots- ie. peaks,animal

[p1,tbl,stats1] = anova1(peaks,pic);
checkStats1 = multcompare(stats1,'CType','bonferroni');

[p2,tb2,stats2] = anova1(peaktime,pic);
checkStats2 = multcompare(stats2,'CType','bonferroni');

%% Plotting reminders

% to plot within the index

% scatter(pic(find(well == 2))',peaks(find(well == 2))')
% 
% for i = 1:length(unique(animal(find(well == 1))));
%     scatter(pic(find(well == 1 & cycle == 1 & animal == i))',peaks(find(well == 1 & cycle == 1 & animal == i))');
%     hold on
% end
% 
% boxplot(pic(find(well == 2 & animal == 0))',peaks(find(well == 2 & animal == 0))')

% boxplot(peaks(find(well == 1)),cycle(find(well == 1)))
% hold on
% boxplot(peaks(find(well == 2)),cycle(find(well == 2)))


% B: plot mean peaks across wells if more than 1 pulse per well
% figure(4);
% if max(mov)>1 || max(cycle)>1;
%     xlength = max(mov);
%     boxplot(peaks,pic,'color',[100 100 100]/255)
%     hold on
%         for w = 1:max(pic);
%             index = find(pic == w);
%             scatter(repmat(w,length(index)/max(xlength),1),grpstats(peaks(index),animal(index)));
%             hold on;
%             peakmeans(w,1:animalNumber) = grpstats(peaks(index),animal(index));
%         end; hold on
%     plot(peakmeans);
%     ylabel('mean individual dF Peaks')
%     xlabel('well or cycle')
%     xlim([0,max(pic)+1])
% end

% B: plot mean peaks across wells if more than 1 pulse per well
% figure(6);
% if max(mov)>1 || max(cycle)>1;
%     xlength = max(mov);
%     boxplot(peaktime,pic,'color',[100 100 100]/255)
%     hold on
%         for w = 1:max(pic);
%             index = find(pic == w);
%             scatter(repmat(w,length(index)/max(xlength),1),grpstats(peaktime(index),animal(index)));
%             hold on;
%             peaktimemeans(w,1:animalNumber) = grpstats(peaktime(index),animal(index));
%         end; hold on
%     plot(peaktimemeans);
%     ylabel('mean individual dF Peak Times')
%     xlabel('well or cycle')
%     xlim([0,max(pic)+1])
% end

% generate large matrix of random x-pos for box-scatter (not used)
% for i = 1:numfiles;
%     a = 0.9;
%     b = 1.1;
%     r(:,i) = (i-1)+((b-a).*rand(numfiles,1) + a);
% end

% AllSqIntNorm(AllSqIntNorm>40)=1;
% AllSqIntNorm(AllSqIntNorm<0.5)=1;
% databrowse(AllSqIntNorm(2:150,:)',(2:150)/10,cycle);
% 
% peaks = mmax(AllSqIntNorm(pulseStart:pulseEnd,:),1);
% 
% for i = 1:140
%     cyclepeaks(i,1) = mean(peaks(find(cycle == i)));
% end
% cyclepeaks(isnan(cyclepeaks))=[];
% plot(cyclepeaks);
% hold on;
% errorbar(grpstats(peaks,cycle,'mean'),grpstats(peaks,cycle,'sem'),'.')